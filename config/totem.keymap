#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

// Layer
#define BASE 0
#define NAVI 1
#define SYMB 2
#define NUMB 3
#define FUNC 4
#define MOUS 5
#define GAME 6

// Key positions
#define L_KEYS 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define R_KEYS 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define L_ETC_KEYS 30
#define R_ETC_KEYS 39
#define L_TMB_KEYS 32 33 34
#define R_TMB_KEYS 35 36 37

&mt {
  tapping-term-ms = <280>;
};

/ {
  macros {
    winpv: winpv {
      label = "WINDOW_PREV";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
          = <&macro_press &kp LCMD &kp LCTRL>
          , <&macro_tap &kp LEFT>
          , <&macro_release &kp LCMD &kp LCTRL>
          ;
    };
    winnx: winnx {
      label = "WINDOW_NEXT";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
          = <&macro_press &kp LCMD &kp LCTRL>
          , <&macro_tap &kp RIGHT>
          , <&macro_release &kp LCMD &kp LCTRL>
          ;
    };
    ppy_scr: ppy_scr {
      label = "PLOOPY_SCROLL_WHEEL";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap_time 1>
        , <&macro_tap &kp KP_NUM &kp KP_NUM>
        ;
    };
    ppy_dpi: ppy_dpi {
      label = "PLOOPY_DPI";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap_time 1>
        , <&macro_tap &kp SLCK &kp SLCK>
        ;
    };
    ppy_rst: ppy_rst {
      label = "PLOOPY_RESET";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap_time 1>
        , <&macro_tap &kp SLCK &kp SLCK &kp KP_NUM &kp KP_NUM>
        ;
    };
  };
  combos {
    compatible = "zmk,combos";
    combo_bt_clr {
      timeout-ms = <50>;
      key-positions = <L_ETC_KEYS R_ETC_KEYS>;
      bindings = <&bt BT_CLR>;
    };
  };
  behaviors {
    lht: left_hand_positional_hold_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "LEFT_POSITIONAL_HOLD_TAP";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <280>;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <R_KEYS L_ETC_KEYS L_TMB_KEYS>;
      hold-trigger-on-release;
    };
    rht: right_hand_positional_hold_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "RIGHT_POSITIONAL_HOLD_TAP";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <280>;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <L_KEYS R_ETC_KEYS R_TMB_KEYS>;
      hold-trigger-on-release;
    };
  };
  keymap {
    compatible = "zmk,keymap";
    base_layer {
      label = "BASE";
      bindings = <
        &kp Q        &kp W       &kp E         &kp R        &kp T            /*=*/ &kp Y        &kp U         &kp I        &kp O       &kp P
        &lht LCMD A  &lht LALT S &lht LCTRL D  &lht LSHFT F &kp G            /*=*/ &kp H        &rht LSHFT J  &rht LCTRL K &rht LALT L &rht LCMD APOS
        &kp Z        &kp X       &kp C         &kp V        &kp B            /*=*/ &kp N        &kp M         &kp COMMA    &kp DOT     &kp SEMI
        &tog GAME    /**/        &mt LCTRL ESC &lt NAVI TAB &mt LSHIFT SPACE /*=*/ &lt SYMB RET &lt NUMB BSPC &lt FUNC DEL /**/        &kp LANG1
      >;
    };
    navi_layer {
      label = "NAVI";
      bindings = <
        &trans   &trans    &trans    &trans    &trans   /*=*/ &kp PG_UP &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp TAB
        &kp LCMD &kp LALT  &kp LCTRL &kp LSHFT &trans   /*=*/ &kp PG_DN &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT
        &ppy_scr &mkp MCLK &mkp RCLK &mkp LCLK &ppy_dpi /*=*/ &trans    &kp HOME   &winpv       &winnx       &kp END
        &trans   /**/      &trans    &trans    &trans   /*=*/ &trans    &trans     &trans       /**/         &trans
      >;
    };
    symb_layer {
      label = "SYMB";
      bindings = <
        &kp LT    &kp LBRC  &kp LPAR &kp LBKT  &kp TILDE /*=*/ &kp CARET &kp RBKT  &kp RPAR  &kp RBRC  &kp GT
        &kp GRAVE &kp MINUS &kp PLUS &kp EQUAL &kp DLLR  /*=*/ &kp HASH  &kp LSHFT &kp LCTRL &kp LALT  &kp LCMD
        &kp BSLH  &kp FSLH  &kp STAR &kp UNDER &kp PRCNT /*=*/ &kp AT    &kp PIPE  &kp AMPS  &kp QMARK &kp EXCL
        &trans    /**/      &trans   &trans    &trans    /*=*/ &trans    &trans    &trans    /**/      &trans
      >;
    };
    numb_layer {
      label = "NUMB";
      bindings = <
        &trans &kp N7 &kp N8 &kp N9 &trans /*=*/ &trans &trans    &trans    &trans   &trans
        &trans &kp N4 &kp N5 &kp N6 &trans /*=*/ &trans &kp LSHFT &kp LCTRL &kp LALT &kp LCMD
        &trans &kp N1 &kp N2 &kp N3 &trans /*=*/ &trans &trans    &trans    &trans   &trans
        &trans /**/   &trans &kp N0 &trans /*=*/ &trans &trans    &trans   /**/      &trans
      >;
    };
    func_layer {
      label = "FUNC";
      bindings = <
        &kp F12 &kp F7 &kp F8 &kp F9 &kp PSCRN       /*=*/ &trans &trans    &trans    &trans   &trans
        &kp F11 &kp F4 &kp F5 &kp F6 &kp SCROLLLOCK  /*=*/ &trans &kp LSHFT &kp LCTRL &kp LALT &kp LCMD
        &kp F10 &kp F1 &kp F2 &kp F3 &kp PAUSE_BREAK /*=*/ &trans &trans    &trans    &trans   &trans
        &trans  /**/   &trans &trans &trans          /*=*/ &trans &trans    &trans    /**/     &trans
      >;
    };
    game_layer {
      label = "GAME";
      bindings = <
        &trans &trans &trans &trans &trans /*=*/ &trans &trans &trans &trans &trans
        &kp A  &kp S  &kp D  &kp F  &trans /*=*/ &trans &trans &trans &trans &trans
        &trans &trans &trans &trans &trans /*=*/ &trans &trans &trans &trans &trans
        &trans /**/   &trans &trans &trans /*=*/ &trans &trans &trans /**/   &trans
      >;
    };
  };
};