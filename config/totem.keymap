#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include "./totem_key_position.h"

// Layer
#define BASE 0
#define NAVI 1
#define SYMB 2
#define NUMB 3
#define FUNC 4
#define GAME 5

/ {
  macros {
    winpv: winpv {
      label = "WINDOW_PREV";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
          = <&macro_press &kp LCMD &kp LCTRL>
          , <&macro_tap &kp LEFT>
          , <&macro_release &kp LCMD &kp LCTRL>
          ;
    };
    winnx: winnx {
      label = "WINDOW_NEXT";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
          = <&macro_press &kp LCMD &kp LCTRL>
          , <&macro_tap &kp RIGHT>
          , <&macro_release &kp LCMD &kp LCTRL>
          ;
    };
    ppy_scr: ppy_scr {
      label = "PLOOPY_SCROLL_WHEEL";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap_time 1>
        , <&macro_tap &kp KP_NUM &kp KP_NUM>
        ;
    };
    ppy_dpi: ppy_dpi {
      label = "PLOOPY_DPI";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap_time 1>
        , <&macro_tap &kp SLCK &kp SLCK>
        ;
    };
    ppy_rst: ppy_rst {
      label = "PLOOPY_RESET";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
        = <&macro_tap_time 1>
        , <&macro_tap &kp SLCK &kp SLCK &kp KP_NUM &kp KP_NUM>
        ;
    };
  };
  combos {
    compatible = "zmk,combos";
    combo_bt_clr {
      timeout-ms = <50>;
      key-positions = <LA_1 RA_1>;
      bindings = <&bt BT_CLR>;
    };
    combo_lang {
      timeout-ms = <50>;
      key-positions = <R3_3 R3_4>;
      bindings = <&kp LANG1>;
    };
  };
  behaviors {
    // Hold Tap
    lht: left_hand_positional_hold_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "LEFT_POSITIONAL_HOLD_TAP";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <280>;
      quick-tap-ms = <175>;
      global-quick-tap-ms = <150>;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <R1_X R2_X R3_X LA_X LT_X>;
      hold-trigger-on-release;
    };
    rht: right_hand_positional_hold_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "RIGHT_POSITIONAL_HOLD_TAP";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <280>;
      quick-tap-ms = <175>;
      global-quick-tap-ms = <150>;
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <L1_X L2_X L3_X RA_X RT_X>;
      hold-trigger-on-release;
    };
    tht: thumb_hold_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "THUMB_HOLD_TAP";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <280>;
      quick-tap-ms = <175>;
      global-quick-tap-ms = <150>;
      bindings = <&kp>, <&kp>;
      hold-trigger-on-release;
    };
    // Mod Morp
    m_comma: morp_comma {
      compatible = "zmk,behavior-mod-morph";
      label = "MORP_COMMA";
      #binding-cells = <0>;
      bindings = <&kp COMMA>, <&kp SEMICOLON>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    m_dot: morp_dot {
      compatible = "zmk,behavior-mod-morph";
      label = "MORP_DOT";
      #binding-cells = <0>;
      bindings = <&kp DOT>, <&kp COLON>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    m_qmark: morp_qmark {
      compatible = "zmk,behavior-mod-morph";
      label = "MORP_QMARK";
      #binding-cells = <0>;
      bindings = <&kp QMARK>, <&kp EXCL>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  };
  keymap {
    compatible = "zmk,keymap";
    base_layer {
      label = "BASE";
      bindings = <
        &kp Q        &kp W       &kp E          &kp R        &kp T             /*=*/ &kp Y        &kp U         &kp I        &kp O       &kp P
        &lht LCMD A  &lht LALT S &lht LCTRL D   &lht LSHFT F &kp G             /*=*/ &kp H        &rht LSHFT J  &rht LCTRL K &rht LALT L &rht LCMD APOS
        &kp Z        &kp X       &kp C          &kp V        &kp B             /*=*/ &kp N        &kp M         &m_comma     &m_dot      &m_qmark
        &tog GAME    /**/        &tht LCTRL ESC &lt NAVI TAB &tht LSHIFT SPACE /*=*/ &lt SYMB RET &lt NUMB BSPC &lt FUNC DEL /**/        &kp LANG1
      >;
    };
    navi_layer {
      label = "NAVI";
      bindings = <
        &trans   &trans    &trans    &trans    &trans   /*=*/ &kp PG_UP &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &trans
        &kp LCMD &kp LALT  &kp LCTRL &kp LSHFT &trans   /*=*/ &kp PG_DN &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT
        &ppy_scr &mkp MCLK &mkp RCLK &mkp LCLK &ppy_dpi /*=*/ &trans    &kp HOME   &winpv       &winnx       &kp END
        &trans   /**/      &trans    &trans    &trans   /*=*/ &trans    &trans     &trans       /**/         &trans
      >;
    };
    symb_layer {
      label = "SYMB";
      bindings = <
        &kp LT    &kp LBRC  &kp LPAR &kp LBKT  &kp TILDE /*=*/ &kp CARET &kp RBKT  &kp RPAR  &kp RBRC &kp GT
        &kp GRAVE &kp MINUS &kp PLUS &kp EQUAL &kp DLLR  /*=*/ &kp HASH  &kp LSHFT &kp LCTRL &kp LALT &kp LCMD
        &kp BSLH  &kp FSLH  &kp STAR &kp UNDER &kp PRCNT /*=*/ &kp AT    &kp PIPE  &kp AMPS  &trans   &trans
        &trans    /**/      &trans   &trans    &trans    /*=*/ &trans    &trans    &trans    /**/     &trans
      >;
    };
    numb_layer {
      label = "NUMB";
      bindings = <
        &trans &kp N7 &kp N8 &kp N9 &trans /*=*/ &trans &trans    &trans    &trans   &trans
        &trans &kp N4 &kp N5 &kp N6 &trans /*=*/ &trans &kp LSHFT &kp LCTRL &kp LALT &kp LCMD
        &trans &kp N1 &kp N2 &kp N3 &trans /*=*/ &trans &trans    &trans    &trans   &trans
        &trans /**/   &trans &kp N0 &trans /*=*/ &trans &trans    &trans   /**/      &trans
      >;
    };
    func_layer {
      label = "FUNC";
      bindings = <
        &kp F12 &kp F7 &kp F8 &kp F9 &kp PSCRN       /*=*/ &trans &trans    &trans    &trans   &trans
        &kp F11 &kp F4 &kp F5 &kp F6 &kp SCROLLLOCK  /*=*/ &trans &kp LSHFT &kp LCTRL &kp LALT &kp LCMD
        &kp F10 &kp F1 &kp F2 &kp F3 &kp PAUSE_BREAK /*=*/ &trans &trans    &trans    &trans   &trans
        &trans  /**/   &trans &trans &trans          /*=*/ &trans &trans    &trans    /**/     &trans
      >;
    };
    game_layer {
      label = "GAME";
      bindings = <
        &trans &trans &trans &trans &trans /*=*/ &trans &trans &trans &trans &trans
        &kp A  &kp S  &kp D  &kp F  &trans /*=*/ &trans &trans &trans &trans &trans
        &trans &trans &trans &trans &trans /*=*/ &trans &trans &trans &trans &trans
        &trans /**/   &trans &trans &trans /*=*/ &trans &trans &trans /**/   &trans
      >;
    };
  };
};